<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Certificate Submission</title>
    <link rel="icon" type="image/png" href="/images/document-xxl.png" />
    <link rel="stylesheet" href="/stylesheets/certificate.css" />
  </head>
  <body>
    <form id="certificateForm" method="POST" action="/send-certificate">
      <h1>Certificate Submission</h1>
      <label for="fname">First Name</label>
      <input type="text" id="fname" name="fname" required />
      <label for="lname">Last Name</label>
      <input type="text" id="lname" name="lname" required />
      <p class="success" style="text-align: center;"></p>
      <div id="errorMessage" style="color: green;"></div>
      <button type="submit">Submit</button>
    </form>


    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script >document
  .getElementById("certificateForm")
  .addEventListener("submit", async function (event) {
    event.preventDefault();

    const lnameInput = document.querySelector('input[name="lname"]');
    const fnameInput = document.querySelector('input[name="fname"]');
    const token = localStorage.getItem("token");
    const successMessageElement = document.querySelector(".succes");
    const errorMessageElement = document.getElementById("errorMessage");

    if (!token) {
      alert("You don't have a token.");
      setTimeout(() => {
        window.location.href = "/login";
      }, 2000);
      return;
    }

    const lname = lnameInput.value.trim();
    const fname = fnameInput.value.trim();

    if (lname === "") {
      successMessageElement.style.color = "red";
      successMessageElement.innerHTML = "This input is undefined.";
      return;
    } else if (fname === "") {
      successMessageElement.style.color = "red";
      successMessageElement.innerHTML = "This input is undefined.";
      return;
    }

    try {
      const response = await axios.post(
        "/send-certificate",
        {
          fname,
          lname,
        },
        {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        }
      );

      successMessageElement.style.textAlign = "center";
      successMessageElement.style.color = "green";
      successMessageElement.innerHTML = response.data.message;
      setTimeout(() => {
        window.location.href = "/profile";
      }, 2000);
    } catch (error) {
      if (error.response) {
        errorMessageElement.textContent = error.response.data.message;
        errorMessageElement.style.display = "block";
      } else {
        errorMessageElement.textContent = "Failed to send the certificate.";
        errorMessageElement.style.display = "block";
      }
    }
  });
</script>
  </body>
</html>
