<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Video Player</title>
    <link rel="icon" type="image/png" href="/images/html.png" />
    <link rel="stylesheet" href="/stylesheets/lessonsDesign.css">
</head>
<body>
    <footer class="wrap">
      <div class="footer-content">
        <div>
          <div class="logo">
            <img src="/images/logo.png" width="150px" height="100px" />
          </div>
        </div>

        <div class="lessons-div">
          <div class="lessons">
            <span class="lessons-title">
              <img src="/images/webinar.png" width="18px" height="18px" />
              Lessons
            </span>
            <div class="dropdown">
              <div class="lesson-item"><a href="/html-lesson">HTML</a></div>
              <div class="lesson-item"><a href="/css-lesson">CSS</a></div>
              <div class="lesson-item"><a href="/js-lesson">JavaScript</a></div>
              <div class="lesson-item"><a href="/node-lesson">Node.js</a></div>
            </div>
          </div>
          <div class="menu-div">
            <span class="menu-item">
              <img src="/images/document-xxl.png" width="15px" height="15px" />
              <a href="/web-quizz" class="menu-link">Certificate</a>
            </span>

            <span class="menu-item">
              <img src="/images/settings.png" width="16px" height="16px" />
              <a href="/settings" class="menu-link">Settings</a>
            </span>
          </div>
        </div>
      </div>
    </footer>

    <br><br>

    <div class="main-container">
        <div>
            <div class="video-container">
                <video controls>
                    <source src="/videos/html-video.mp4" type="video/mp4" />
                    <source src="/videos/html-video.ogg" type="video/ogg" />
                    Your browser does not support the video tag.
                </video>
            </div>
            <div class="video-container">
                <video controls>
                    <source src="/videos/html-video.mp4" type="video/mp4" />
                    <source src="/videos/html-video.ogg" type="video/ogg" />
                    Your browser does not support the video tag.
                </video>
            </div>
            <div class="video-container">
                <video controls>
                    <source src="/videos/html-video.mp4" type="video/mp4" />
                    <source src="/videos/html-video.ogg" type="video/ogg" />
                    Your browser does not support the video tag.
                </video>
            </div>
        </div>
        <div class="author-container">
            <div class="author-div">
                <img src="https://www.gatesfoundation.org/-/media/gfo/3about/3people/ga311881_bill_gates.jpg?rev=010c433f329e4818ba412ec713c888d6&w=570&hash=2F9F9BF2882AFA2956DF6C37749C225E" class="avatar" style="margin-left: 22px;">
                <p class="video-author">Bill Gates</p>
                <span class="author-description" id="author-name">
Work Experience:
Co-founder and CEO, Microsoft Corporation**  
Years Active: 1975 - 2000  
Co-founded Microsoft, revolutionizing personal computing with software products like MS-DOS and Windows operating systems.  
Led software development initiatives, overseeing teams that created Microsoft Office and other productivity applications.  
Championed innovation in programming languages, including the development of Visual Basic and .NET framework.- Programming languages: C, C++, Python, and Java.  
- Extensive experience in software architecture and design.  
- Strong understanding of database management and systems integration.  
- Excellent leadership and communication skills.. Despite all that success, he decided to try his hand at CodeArt.</span>
           <br>
                   <h1>Rating Section</h1>

    <div class="rating-container">
        <button class="rating-btn" data-rating="1" style="font-size:150%;color:yellow;">★</button>
        <button class="rating-btn" data-rating="2" style="font-size:150%;color:yellow;">★</button>
        <button class="rating-btn" data-rating="3" style="font-size:150%;color:yellow;">★</button>
        <button class="rating-btn" data-rating="4" style="font-size:150%;color:yellow;">★</button>
        <button class="rating-btn" data-rating="5" style="font-size:150%;color:yellow;">★</button>
    </div>
    <p class="rating-p"></p>
            </div>
        </div>
    </div>

    <br>

     <div id="comments">
    <h1>Comments Section</h1>

    <div id="comment-div">
        <form id="commentForm" action="/html-lesson" method="POST">
            <input name="lesson_type" value="html-lesson" id="lesson_type" type="hidden">
            <div class="smileys">
                <button type="button" class="smiley-btn" data-smiley="😊">😊</button>
                <button type="button" class="smiley-btn" data-smiley="😄">😄</button>
                <button type="button" class="smiley-btn" data-smiley="😢">😢</button>
                <button type="button" class="smiley-btn" data-smiley="😡">😡</button>
                <button type="button" class="smiley-btn" data-smiley="😍">😍</button>
                <button type="button" class="smiley-btn" data-smiley="😜">😜</button>
                <button type="button" class="smiley-btn" data-smiley="😎">😎</button>
                <button type="button" class="smiley-btn" data-smiley="🤔">🤔</button>
                <button type="button" class="smiley-btn" data-smiley="😳">😳</button>
                <button type="button" class="smiley-btn" data-smiley="👍">👍</button>
                <button type="button" class="smiley-btn" data-smiley="👎">👎</button>
                <button type="button" class="smiley-btn" data-smiley="👏">👏</button>
                <button type="button" class="smiley-btn" data-smiley="✍">✍</button>
        
   

            </div>
            <textarea name="comment" id="commentText" placeholder="Write your comment here..."></textarea>
            <p class="for-error"></p>
            <input type="submit" value="Submit" />
        </form>
    </div>

    <div class="comment-list" id="commentList">
        <% if (comments && comments.length > 0) { %>
            <% comments.forEach(comment => { %>
            <div class="comment" data-comment-id="<%= comment.id %>"> 
                <strong class="comment-author"><%= comment.User.username %>:</strong>
                <p class="comment-text"><%= comment.comments %></p>
                <div class="data-time">
                    <p><%= comment.createdAt.getFullYear() %>-</p>
                    <p><%= comment.createdAt.getMonth() + 1 %>-</p>
                    <p><%= comment.createdAt.getDate() %></p>
                </div>
            </div>
            <% }) %>
        <% } else { %>
            <p>No comments available.</p>
        <% } %>
    </div>
</div>




     <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>


<script>
    const ratingButtons = document.querySelectorAll('.rating-btn');

    ratingButtons.forEach(button => {
        button.addEventListener('click', async function() {
            event.preventDefault();
            const rating = this.dataset.rating;
            const lessonType = 'html-lesson'; 

            try {
                const response = await axios.post('/rate', {
                    rating,
                    lesson_type: lessonType
                }, {
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: "Bearer " + localStorage.getItem("token"),
                    },
                });

                if (response.status === 201) {
                   const p =  document.querySelector(".rating-p");
                   p.style.color = "limegreen"
                   p.innerHTML = "You successfully send review"
                   
                   setTimeout(() => {
                     p.innerHTML = ""
                   }, 3000);
        
                }
            } catch (error) {
                console.error("Ошибка при отправке оценки:", error);
                const p =  document.querySelector(".rating-p");
                p.style.color = "red"
                p.innerHTML = "You have already sent review";
                setTimeout(() => {
                     p.innerHTML = ""
                   }, 3000);
        
            }
        });
    });


const smileyButtons = document.querySelectorAll('.smiley-btn');

smileyButtons.forEach(button => {
    button.addEventListener('click', function() {
        const smiley = this.dataset.smiley;
        const commentInput = document.getElementById("commentText");
        commentInput.value += smiley; 
        commentInput.focus(); 
    });
});

    document.getElementById("commentForm").addEventListener("submit", async function (event) {
        event.preventDefault();
        const commentInput = document.getElementById("commentText");
        const comment = commentInput.value;
        const lessonType = document.querySelector('#lesson_type').value;
        
        if(comment.trim() === ""){
            const text = document.querySelector(".for-error");
            text.style.textAlign = "center";
            text.innerHTML = "Comments is undifined"

            setInterval(() => {
            text.innerHTML = ""
            },3000);
            return
        } 
        const token = localStorage.getItem("token")
        try {
            const response = await axios.post(
                "/html-lesson",
                {
                    comment,
                    lesson_type: lessonType,                },
                {
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: token,
                    },
                },
            );
            if (response.status === 201) {
                location.reload();
            }
        } catch (error) {
            if (error.response) {
                console.error(error.response.data.error);
                alert("You dont have token")
            } else {
                console.error("Error:", error.message);
            }
        }
        commentInput.value = "";
    });
</script>
</body>
</html>
</body>
</html>